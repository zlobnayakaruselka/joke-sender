# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    App\Controller\JokeController:
        class: App\Controller\JokeController
        arguments:
            $jokeSenderTemplate: 'joke_sender.html.twig'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    GuzzleHttp\Client:
        class: GuzzleHttp\Client

    JsonSchema\Validator:
        class: JsonSchema\Validator

    # App\Services
    App\Services\JokeAPI\JokeAPI:
        class: App\Services\JokeAPI\ChuckNorrisAPI

    App\Services\Mail\EmailBuilderInterface:
        class: App\Services\Mail\RandomJokeEmailBuilder
        arguments:
            $template: 'mail/random_joke_with_category.html.twig'
            $emailFrom: 'ya@gmail.com'
    # App\Services

    App\Entity\EntityFactoryInterface:
        class: App\Entity\EntityFactory

    App\EventListener\ExceptionListener:
        tags:
            - { name: kernel.event_listener, event: kernel.exception }